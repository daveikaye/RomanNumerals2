#test converts_1_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 1), "I");

#test converts_2_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 2), "II");

#test converts_4_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 4), "IV");

#test converts_5_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 5), "V");

#test converts_9_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 9), "IX");

#test converts_10_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 10), "X");

#test converts_40_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 40), "XL");

#test converts_50_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 50), "L");

#test converts_90_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 90), "XC");

#test converts_100_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 100), "C");

#test converts_400_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 400), "CD");

#test converts_500_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 500), "D");

#test converts_900_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 900), "CM");

#test converts_1000_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 1000), "M");

#test converts_max_to_roman
    ck_assert_str_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 3999), "MMMCMXCIX");

#test convert_to_roman_returns_null_for_negative_arabic
    ck_assert_ptr_eq(to_roman(malloc(MAX_MEMORY_NEEDED), -1), NULL);

#test convert_to_roman_returns_null_for_zero_arabic
    ck_assert_ptr_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 0), NULL);

#test convert_to_roman_returns_null_for_greater_than_max_arabic
    ck_assert_ptr_eq(to_roman(malloc(MAX_MEMORY_NEEDED), 4000), NULL);

#main-pre
    tcase_add_checked_fixture(tc1_1, mp_setup, mp_teardown);