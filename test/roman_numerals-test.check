#test converts_to_arabic
	ck_assert_int_eq(to_arabic("I"), 1);
	ck_assert_int_eq(to_arabic("I"), 1);
	ck_assert_int_eq(to_arabic("V"), 5);
    ck_assert_int_eq(to_arabic("X"), 10);
    ck_assert_int_eq(to_arabic("L"), 50);
    ck_assert_int_eq(to_arabic("C"), 100);
    ck_assert_int_eq(to_arabic("D"), 500);
    ck_assert_int_eq(to_arabic("M"), 1000);

    ck_assert_int_eq(to_arabic("II"), 2);
    ck_assert_int_eq(to_arabic("IV"), 4);

    ck_assert_int_eq(to_arabic("MMMCMXCIX"), 3999);

    //Check error conditions
    ck_assert_int_eq(to_arabic("MMMCMXCX"), -1);
    ck_assert_int_eq(to_arabic(""), -1);
    ck_assert_int_eq(to_arabic(NULL), -1);

#test adds_roman_numerals
    ck_assert_str_eq(add("IV", "V"), "IX");
    ck_assert_str_eq(add("MMMCMXCVIII", "I"), "MMMCMXCIX");

    //Check error conditions
    ck_assert_ptr_eq(add("MMMCMXCIX", "I"), NULL);
    ck_assert_ptr_eq(add("MMMCMXCIX", NULL), NULL);
    ck_assert_ptr_eq(add(NULL, "I"), NULL);
    ck_assert_ptr_eq(add(NULL, NULL), NULL);

#test subtracts_roman_numerals
    ck_assert_str_eq(subtract("V", "IV"), "I");

    //Check error conditions
    ck_assert_ptr_eq(subtract("IV", "IV"), NULL);
    ck_assert_ptr_eq(subtract("IV", "V"), NULL);
    ck_assert_ptr_eq(subtract("IV", NULL), NULL);